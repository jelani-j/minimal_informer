version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing cfn-lint...
      - pip install cfn-lint
      - echo Installing Node.js dependencies...
      #- npm install

  build:
    commands:
      - echo Linting CloudFormation template...
      - cfn-lint template.yml
      - cp template.yml output.yml
      - echo Build phase complete
      # - echo Zipping file for lambda function
      # - zip -r LambdaFunction.zip node_modules
      - echo Setting S3 bucket name...
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - BUCKET_NAME="minimal-informer-codepipeline-artifacts-${ACCOUNT_ID}-${AWS_REGION}"
      # - echo Uploading 'init' folder to $BUCKET_NAME...
      # - aws s3 cp ./website_layout s3://$BUCKET_NAME/StaticWebsite/ --recursive
      # - echo Zipping npm install for lambda dependencies
      # - zip -r node_modules.zip node_modules/
      # - echo Pushing zip file to bucket
      # - aws s3 cp node_modules.zip s3://$BUCKET_NAME/node_modules.zip
      - echo Creating functions zip folder 
      - zip -r lambdafunctions.zip functions/
      - echo Updating Functions folder 
      # - aws s3 cp lambdafunctions.zip s3://$BUCKET_NAME/lambdafunctions.zip
      - echo Deploying new changes
      # - aws cloudformation deploy --template-file template.yml --stack-name MyAppStack --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
      #- echo grabbing version of lambda file to update code in aws 
      - VERSION_ID=$(aws s3api put-object --bucket "$BUCKET_NAME" --key lambdafunctions.zip --body lambdafunctions.zip --query 'VersionId' --output text)
      - echo S3 Version ID $VERSION_ID
      - aws cloudformation deploy --template-file template.yml --stack-name MyAppStack --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --parameter-overrides LambdaCodeVersion="$VERSION_ID"

artifacts:
  name: BuildOutput
  files:
    - output.yml  
    - node_modules.zip
    - lambdafunctions.zip
  discard-paths: yes